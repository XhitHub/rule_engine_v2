
const gRulesV1 = [
  {
    lhs: [
      '$1 is in $2 at time $3',
      '$2 has termination at time $3'
    ],
    // consequence can be N new facts
    rhs: [
      '$1 is terminated at time $sum($3,1)',
    ]
  }
]

const gRulesV2 = [
  {
    lhs: [
      '${char} is in ${room} at time ${time}',
      '${room} has termination at time ${sum(time, -1)}',
    ],
    // consequence can be N new facts
    rhs: [
      '${char} is terminated at time ${sum(time, 1)}',
    ]
  }
]

const gRulesV2_2 = [
  {
    lhs: [
      '${char} is in ${room} at time ${time}',
      '${room} has termination at time ${sum(time, -1)}',
    ],
    // consequence can be N new facts
    rhs: [
      '${char} is terminated at time ${sum(time, 1)}',
    ]
  }
]


_findPotentiallyFittingFacts(gRule, facts, xhs) {
    // xhs: gRule's which xhs to be searched in facts, e.g. 'lhs', 'rhs'
    let possFittingFacts = []
    facts.forEach(fact => {
      gRule.searchForm[xhs].forEach(sFact => {
        let sFactRegex = new RegExp(sFact, 'g');
        let isFit = sFactRegex.test(fact)
      })
    })
  }